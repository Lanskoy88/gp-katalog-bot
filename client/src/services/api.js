import axios from 'axios';

// –ü—Ä–æ—Å—Ç–æ–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ
const cache = {
  categories: null,
  categoriesTimestamp: null,
  cacheTimeout: 5 * 60 * 1000 // 5 –º–∏–Ω—É—Ç
};

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –±–∞–∑–æ–≤—ã–π URL
const getBaseURL = () => {
  // –í –ø—Ä–æ–¥–∞–∫—à–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º Render URL
  if (process.env.NODE_ENV === 'production') {
    return 'https://gp-katalog-bot.onrender.com/api';
  }
  
  // –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ Render URL –∫–∞–∫ fallback
  return process.env.REACT_APP_API_URL || 'https://gp-katalog-bot.onrender.com/api';
};

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä axios —Å –±–∞–∑–æ–≤—ã–º URL
const api = axios.create({
  baseURL: getBaseURL(),
  timeout: 30000, // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç –¥–ª—è Render
});

// –ò–Ω—Ç–µ—Ä—Ü–µ–ø—Ç–æ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
api.interceptors.response.use(
  (response) => {
    console.log('API Response:', response.config.url, response.data);
    return response.data;
  },
  (error) => {
    console.error('API Error:', (error.config && error.config.url), error.message, (error.response && error.response.data));
    
    // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–µ
    if (error.code === 'ECONNABORTED') {
      console.error('Request timeout - –≤–æ–∑–º–æ–∂–Ω–æ, —Å–µ—Ä–≤–µ—Ä –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω');
    }
    
    throw error;
  }
);

// –ò–Ω—Ç–µ—Ä—Ü–µ–ø—Ç–æ—Ä –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤
api.interceptors.request.use(
  (config) => {
    console.log('API Request:', (config.method && config.method.toUpperCase()), config.url);
    return config;
  },
  (error) => {
    console.error('API Request Error:', error);
    return Promise.reject(error);
  }
);

// API —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–æ–≤–∞—Ä–∞–º–∏
export const fetchProducts = async (params = {}) => {
  const { page = 1, limit = 50, categoryId, search } = params;
  
  const queryParams = new URLSearchParams({
    page: page.toString(),
    limit: limit.toString(),
  });
  
  if (categoryId) {
    queryParams.append('category', categoryId);
  }
  
  if (search) {
    queryParams.append('search', search);
  }
  
  return api.get(`/products?${queryParams.toString()}`);
};

// API —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
export const fetchCategories = async () => {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à
  const now = Date.now();
  if (cache.categories && cache.categoriesTimestamp && 
      (now - cache.categoriesTimestamp) < cache.cacheTimeout) {
    console.log('üì¶ –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ –∫—ç—à–∞');
    return cache.categories;
  }
  
  console.log('üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞...');
  const categories = await api.get('/categories');
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫—ç—à
  cache.categories = categories;
  cache.categoriesTimestamp = now;
  
  return categories;
};

// API —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
export const fetchCategorySettings = async () => {
  return api.get('/category-settings');
};

export const updateCategorySettings = async (settings) => {
  return api.put('/category-settings', { settings });
};

// API —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
export const fetchStats = async () => {
  return api.get('/stats');
};

// API —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞
export const searchProducts = async (query, page = 1, limit = 100) => {
  const queryParams = new URLSearchParams({
    q: query,
    page: page.toString(),
    limit: limit.toString(),
  });
  
  return api.get(`/search?${queryParams.toString()}`);
};

// API —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
export const fetchProductById = async (id) => {
  return api.get(`/products/${id}`);
};

// API —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
export const fetchProductImage = async (productId, imageId) => {
  return api.get(`/products/${productId}/images/${imageId}`, {
    responseType: 'blob'
  });
};

// API —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è—Ö —Ç–æ–≤–∞—Ä–∞
export const fetchProductImages = async (productId) => {
  return api.get(`/products/${productId}/images`);
};

// API —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ú–æ–π–°–∫–ª–∞–¥
export const testMoyskladConnection = async () => {
  return api.get('/test-connection');
};

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è API
export const checkApiHealth = async () => {
  return api.get('/health');
};

export default api; 