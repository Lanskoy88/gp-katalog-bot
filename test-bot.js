require('dotenv').config();
const TelegramBot = require('node-telegram-bot-api');
const axios = require('axios');

console.log('Testing Telegram bot initialization...');
console.log('Environment variables:');
console.log('- NODE_ENV:', process.env.NODE_ENV);
console.log('- TELEGRAM_BOT_TOKEN exists:', !!process.env.TELEGRAM_BOT_TOKEN);
console.log('- TELEGRAM_BOT_TOKEN length:', process.env.TELEGRAM_BOT_TOKEN ? process.env.TELEGRAM_BOT_TOKEN.length : 'NOT SET');

if (!process.env.TELEGRAM_BOT_TOKEN) {
  console.error('‚ùå TELEGRAM_BOT_TOKEN not set');
  process.exit(1);
}

try {
  console.log('\nCreating bot instance...');
  const bot = new TelegramBot(process.env.TELEGRAM_BOT_TOKEN, { 
    webHook: false,
    request: {
      timeout: 30000
    }
  });

  console.log('‚úÖ Bot instance created successfully');
  console.log('Bot methods available:', Object.keys(bot).filter(key => typeof bot[key] === 'function').slice(0, 15));
  console.log('- processUpdate method:', typeof bot.processUpdate === 'function');
  console.log('- onText method:', typeof bot.onText === 'function');
  console.log('- sendMessage method:', typeof bot.sendMessage === 'function');
  console.log('- setWebHook method:', typeof bot.setWebHook === 'function');

  // –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–æ—Ç–∞
  const BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
  const BASE_URL = 'https://gp-katalog-bot.onrender.com';

  async function testBot() {
    console.log('ü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞...\n');
    
    if (!BOT_TOKEN) {
      console.error('‚ùå TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
      return;
    }
    
    try {
      // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ
      console.log('1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ...');
      const botInfo = await axios.get(`https://api.telegram.org/bot${BOT_TOKEN}/getMe`);
      console.log('‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ –ø–æ–ª—É—á–µ–Ω–∞');
      console.log('   –ò–º—è:', botInfo.data.result.first_name);
      console.log('   Username:', botInfo.data.result.username);
      console.log('   ID:', botInfo.data.result.id);
      
      // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook
      console.log('\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook...');
      const webhookInfo = await axios.get(`https://api.telegram.org/bot${BOT_TOKEN}/getWebhookInfo`);
      console.log('‚úÖ Webhook –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞');
      console.log('   URL:', webhookInfo.data.result.url);
      console.log('   Has custom certificate:', webhookInfo.data.result.has_custom_certificate);
      console.log('   Pending update count:', webhookInfo.data.result.pending_update_count);
      console.log('   Last error date:', webhookInfo.data.result.last_error_date);
      console.log('   Last error message:', webhookInfo.data.result.last_error_message);
      
      // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
      console.log('\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π...');
      const updates = await axios.get(`https://api.telegram.org/bot${BOT_TOKEN}/getUpdates?limit=5`);
      console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω—ã');
      console.log('   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π:', updates.data.result.length);
      
      if (updates.data.result.length > 0) {
        const lastUpdate = updates.data.result[updates.data.result.length - 1];
        console.log('   –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ ID:', lastUpdate.update_id);
        console.log('   –¢–∏–ø:', lastUpdate.message ? 'message' : 'callback_query');
      }
      
      // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook URL
      console.log('\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook URL...');
      const webhookUrl = `${BASE_URL}/webhook`;
      console.log('   –û–∂–∏–¥–∞–µ–º—ã–π webhook URL:', webhookUrl);
      console.log('   –§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π webhook URL:', webhookInfo.data.result.url);
      
      if (webhookInfo.data.result.url === webhookUrl) {
        console.log('‚úÖ Webhook URL –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π');
      } else {
        console.log('‚ö†Ô∏è Webhook URL –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç');
        console.log('   –ü–æ–ø—ã—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π webhook...');
        
        try {
          await axios.post(`https://api.telegram.org/bot${BOT_TOKEN}/setWebhook`, {
            url: webhookUrl,
            allowed_updates: ['message', 'edited_message', 'callback_query', 'inline_query', 'chosen_inline_result']
          });
          console.log('‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
        } catch (error) {
          console.error('‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook:', error.response?.data || error.message);
        }
      }
      
      console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
      console.log('\nüí° –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–∞–∫—Ü–∏–∏ –Ω–∞ /start:');
      console.log('   1. –ù–∞–π–¥–∏—Ç–µ –±–æ—Ç–∞ –≤ Telegram: @' + botInfo.data.result.username);
      console.log('   2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /start');
      console.log('   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –±–æ—Ç –æ—Ç–≤–µ—á–∞–µ—Ç');
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –±–æ—Ç–∞:', error.message);
      if (error.response) {
        console.error('Status:', error.response.status);
        console.error('Data:', error.response.data);
      }
    }
  }

  // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
  testBot();

} catch (error) {
  console.error('‚ùå Error creating bot instance:', error.message);
  process.exit(1);
} 