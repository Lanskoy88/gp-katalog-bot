#!/usr/bin/env node

require('dotenv').config();
const axios = require('axios');

const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const BASE_URL = process.env.BASE_URL || 'https://gp-katalog-bot.onrender.com';

async function setupWebhook() {
    console.log('üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±—Ö—É–∫–∞ –¥–ª—è Telegram –±–æ—Ç–∞...\n');
    
    if (!TELEGRAM_BOT_TOKEN) {
        console.error('‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
        process.exit(1);
    }
    
    const webhookUrl = `${BASE_URL}/webhook`;
    
    console.log(`üì° URL –≤–µ–±—Ö—É–∫–∞: ${webhookUrl}`);
    console.log(`ü§ñ –¢–æ–∫–µ–Ω –±–æ—Ç–∞: ${TELEGRAM_BOT_TOKEN.substring(0, 10)}...`);
    
    try {
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –≤–µ–±—Ö—É–∫
        console.log('\nüîÑ –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –≤–µ–±—Ö—É–∫...');
        const deleteResponse = await axios.post(
            `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/deleteWebhook`
        );
        
        if (deleteResponse.data.ok) {
            console.log('‚úÖ –°—Ç–∞—Ä—ã–π –≤–µ–±—Ö—É–∫ —É–¥–∞–ª–µ–Ω');
        }
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π –≤–µ–±—Ö—É–∫
        console.log('\nüîó –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π –≤–µ–±—Ö—É–∫...');
        const setResponse = await axios.post(
            `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/setWebhook`,
            {
                url: webhookUrl,
                allowed_updates: [
                    'message',
                    'edited_message',
                    'callback_query',
                    'inline_query',
                    'chosen_inline_result'
                ],
                drop_pending_updates: true
            }
        );
        
        if (setResponse.data.ok) {
            console.log('‚úÖ –í–µ–±—Ö—É–∫ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!');
        } else {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –≤–µ–±—Ö—É–∫–∞:', setResponse.data);
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –≤–µ–±—Ö—É–∫–∞
        console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –≤–µ–±—Ö—É–∫–∞...');
        const infoResponse = await axios.get(
            `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/getWebhookInfo`
        );
        
        if (infoResponse.data.ok) {
            const info = infoResponse.data.result;
            console.log('üìä –°—Ç–∞—Ç—É—Å –≤–µ–±—Ö—É–∫–∞:');
            console.log(`   URL: ${info.url || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}`);
            console.log(`   –û–∂–∏–¥–∞—é—â–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ${info.pending_update_count}`);
            console.log(`   –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ${info.allowed_updates?.join(', ') || '–≤—Å–µ'}`);
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –≤–µ–±—Ö—É–∫–∞:', error.message);
        if (error.response) {
            console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.response.data);
        }
    }
}

async function removeWebhook() {
    console.log('üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –≤–µ–±—Ö—É–∫–∞...\n');
    
    try {
        const response = await axios.post(
            `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/deleteWebhook`
        );
        
        if (response.data.ok) {
            console.log('‚úÖ –í–µ–±—Ö—É–∫ —É–¥–∞–ª–µ–Ω');
        } else {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≤–µ–±—Ö—É–∫–∞:', response.data);
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    }
}

async function getWebhookInfo() {
    console.log('üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–µ–±—Ö—É–∫–µ...\n');
    
    try {
        const response = await axios.get(
            `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/getWebhookInfo`
        );
        
        if (response.data.ok) {
            const info = response.data.result;
            console.log('üìã –°—Ç–∞—Ç—É—Å –≤–µ–±—Ö—É–∫–∞:');
            console.log(`   URL: ${info.url || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}`);
            console.log(`   –û–∂–∏–¥–∞—é—â–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ${info.pending_update_count}`);
            console.log(`   –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ${info.allowed_updates?.join(', ') || '–≤—Å–µ'}`);
            console.log(`   –ö–∞—Å—Ç–æ–º–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç: ${info.has_custom_certificate ? '–¥–∞' : '–Ω–µ—Ç'}`);
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
const command = process.argv[2];

switch (command) {
    case 'setup':
        setupWebhook();
        break;
    case 'remove':
        removeWebhook();
        break;
    case 'info':
        getWebhookInfo();
        break;
    default:
        console.log('üîß –°–∫—Ä–∏–ø—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–µ–±—Ö—É–∫–æ–≤ Telegram –±–æ—Ç–∞\n');
        console.log('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:');
        console.log('  node setup-webhook.js setup   - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–µ–±—Ö—É–∫');
        console.log('  node setup-webhook.js remove  - —É–¥–∞–ª–∏—Ç—å –≤–µ–±—Ö—É–∫');
        console.log('  node setup-webhook.js info    - –ø–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–µ–±—Ö—É–∫–µ');
        console.log('\n–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
        console.log('  TELEGRAM_BOT_TOKEN - —Ç–æ–∫–µ–Ω –±–æ—Ç–∞');
        console.log('  BASE_URL           - –±–∞–∑–æ–≤—ã–π URL (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: https://gp-katalog-bot.onrender.com)');
} 