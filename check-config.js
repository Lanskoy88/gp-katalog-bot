#!/usr/bin/env node

require('dotenv').config();

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Telegram –±–æ—Ç–∞...\n');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
const requiredEnvVars = [
  'TELEGRAM_BOT_TOKEN',
  'MOYSKLAD_API_TOKEN'
];

const missingVars = [];

requiredEnvVars.forEach(varName => {
  if (!process.env[varName]) {
    missingVars.push(varName);
    console.log(`‚ùå ${varName}: –ù–ï –ù–ê–ô–î–ï–ù`);
  } else {
    console.log(`‚úÖ ${varName}: –ù–ê–ô–î–ï–ù`);
  }
});

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
const optionalEnvVars = [
  'BASE_URL',
  'PORT',
  'NODE_ENV',
  'ADMIN_IDS',
  'ALLOWED_ORIGINS'
];

console.log('\nüìã –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:');
optionalEnvVars.forEach(varName => {
  if (process.env[varName]) {
    console.log(`‚úÖ ${varName}: ${process.env[varName]}`);
  } else {
    console.log(`‚ö†Ô∏è  ${varName}: –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù`);
  }
});

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞
const fs = require('fs');
const path = require('path');

console.log('\nüìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞:');

const requiredFiles = [
  'server/index.js',
  'server/handlers/botHandlers.js',
  'server/services/moyskladService.js',
  'server/routes/api.js',
  'client/package.json'
];

requiredFiles.forEach(filePath => {
  if (fs.existsSync(filePath)) {
    console.log(`‚úÖ ${filePath}: –ù–ê–ô–î–ï–ù`);
  } else {
    console.log(`‚ùå ${filePath}: –ù–ï –ù–ê–ô–î–ï–ù`);
  }
});

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª–∏–µ–Ω—Ç—Å–∫—É—é —Å–±–æ—Ä–∫—É
const buildPath = path.join(__dirname, 'client/build');
const indexPath = path.join(buildPath, 'index.html');

if (fs.existsSync(buildPath)) {
  console.log(`‚úÖ client/build: –ù–ê–ô–î–ï–ù`);
  if (fs.existsSync(indexPath)) {
    console.log(`‚úÖ client/build/index.html: –ù–ê–ô–î–ï–ù`);
  } else {
    console.log(`‚ùå client/build/index.html: –ù–ï –ù–ê–ô–î–ï–ù`);
  }
} else {
  console.log(`‚ö†Ô∏è  client/build: –ù–ï –ù–ê–ô–î–ï–ù (–Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å npm run build)`);
}

// –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞
console.log('\nüìä –ò–¢–û–ì–û–í–ê–Ø –û–¶–ï–ù–ö–ê:');

if (missingVars.length === 0) {
  console.log('‚úÖ –í—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
} else {
  console.log(`‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: ${missingVars.join(', ')}`);
  console.log('\nüí° –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞:');
  console.log('TELEGRAM_BOT_TOKEN=your_bot_token_here');
  console.log('MOYSKLAD_API_TOKEN=your_moysklad_token_here');
  console.log('BASE_URL=https://your-domain.com');
}

if (fs.existsSync(indexPath)) {
  console.log('‚úÖ –ö–ª–∏–µ–Ω—Ç—Å–∫–∞—è —Å–±–æ—Ä–∫–∞ –≥–æ—Ç–æ–≤–∞');
} else {
  console.log('‚ö†Ô∏è  –ö–ª–∏–µ–Ω—Ç—Å–∫–∞—è —Å–±–æ—Ä–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
  console.log('üí° –í—ã–ø–æ–ª–Ω–∏—Ç–µ: npm run build');
}

console.log('\nüöÄ –î–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: npm start');
console.log('üîß –î–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: npm run dev'); 