#!/usr/bin/env node

const axios = require('axios');
require('dotenv').config();

async function checkConfiguration() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Telegram Bot —Å –∫–∞—Ç–∞–ª–æ–≥–æ–º —Ç–æ–≤–∞—Ä–æ–≤ –ú–æ–π–°–∫–ª–∞–¥');
  console.log('==============================================================\n');

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
  console.log('üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:');

  const requiredVars = [
    'TELEGRAM_BOT_TOKEN',
    'MOYSKLAD_API_TOKEN', 
    'MOYSKLAD_ACCOUNT_ID'
  ];

  const optionalVars = [
    'PORT',
    'NODE_ENV',
    'BASE_URL',
    'ADMIN_IDS'
  ];

  let allRequiredVarsPresent = true;

  console.log('\n–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:');
  requiredVars.forEach(varName => {
    const value = process.env[varName];
    if (value) {
      console.log(`‚úÖ ${varName}: ${value.substring(0, 10)}...`);
    } else {
      console.log(`‚ùå ${varName}: –ù–ï –ù–ê–ô–î–ï–ù–ê`);
      allRequiredVarsPresent = false;
    }
  });

  console.log('\n–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:');
  optionalVars.forEach(varName => {
    const value = process.env[varName];
    if (value) {
      console.log(`‚úÖ ${varName}: ${value}`);
    } else {
      console.log(`‚ö†Ô∏è  ${varName}: –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)`);
    }
  });

  if (!allRequiredVarsPresent) {
    console.log('\n‚ùå –û—à–∏–±–∫–∞: –ù–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!');
    console.log('–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env –Ω–∞ –æ—Å–Ω–æ–≤–µ env.example –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è.');
    process.exit(1);
  }

  console.log('\n‚úÖ –í—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!');

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram Bot
  console.log('\nü§ñ –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram Bot:');
  const telegramToken = process.env.TELEGRAM_BOT_TOKEN;

  try {
    const response = await axios.get(`https://api.telegram.org/bot${telegramToken}/getMe`);
    const bot = response.data;
    
    if (bot.ok) {
      console.log(`‚úÖ –ë–æ—Ç –Ω–∞–π–¥–µ–Ω: @${bot.result.username}`);
      console.log(`   –ò–º—è: ${bot.result.first_name}`);
      console.log(`   ID: ${bot.result.id}`);
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ');
    }
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram API:');
    console.log(`   ${error.message}`);
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ú–æ–π–°–∫–ª–∞–¥ API
  console.log('\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –ú–æ–π–°–∫–ª–∞–¥ API:');
  const moyskladToken = process.env.MOYSKLAD_API_TOKEN;
  const accountId = process.env.MOYSKLAD_ACCOUNT_ID;

  try {
    const response = await axios.get('https://api.moysklad.ru/api/remap/1.2/entity/product?limit=1', {
      headers: {
        'Authorization': `Bearer ${moyskladToken}`,
        'Accept': 'application/json;charset=utf-8',
        'Content-Type': 'application/json'
      }
    });
    
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ú–æ–π–°–∫–ª–∞–¥ API —É—Å–ø–µ—à–Ω–æ');
    console.log(`   Account ID: ${accountId}`);
    console.log(`   –¢–æ–≤–∞—Ä–æ–≤ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ: ${response.data.meta.size}`);
    
    if (response.data.rows.length > 0) {
      console.log(`   –ü—Ä–∏–º–µ—Ä —Ç–æ–≤–∞—Ä–∞: ${response.data.rows[0].name}`);
    }
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ú–æ–π–°–∫–ª–∞–¥ API:');
    if (error.response) {
      console.log(`   –°—Ç–∞—Ç—É—Å: ${error.response.status}`);
      console.log(`   –°–æ–æ–±—â–µ–Ω–∏–µ: ${error.response.data.error || error.message}`);
    } else {
      console.log(`   ${error.message}`);
    }
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–∞
  console.log('\nüåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–µ—Ä–≤–µ—Ä–∞:');
  const port = process.env.PORT || 3000;
  console.log(`   –ü–æ—Ä—Ç: ${port}`);
  console.log(`   –†–µ–∂–∏–º: ${process.env.NODE_ENV || 'development'}`);
  console.log(`   Base URL: ${process.env.BASE_URL || `http://localhost:${port}`}`);

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω–æ–≤
  console.log('\nüë§ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:');
  const adminIds = process.env.ADMIN_IDS;
  if (adminIds) {
    const admins = adminIds.split(',').map(id => id.trim());
    console.log(`   –ù–∞–π–¥–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: ${admins.length}`);
    admins.forEach((id, index) => {
      console.log(`   ${index + 1}. ${id}`);
    });
  } else {
    console.log('‚ö†Ô∏è  –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
    console.log('   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é ADMIN_IDS –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è');
  }

  console.log('\nüéâ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
  console.log('\nüìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
  console.log('1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: npm run dev');
  console.log('2. –û—Ç–∫—Ä–æ–π—Ç–µ –±–æ—Ç–∞ –≤ Telegram –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start');
  console.log('3. –ù–∞–∂–º–∏—Ç–µ "–û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ç–∞–ª–æ–≥" –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
  console.log('4. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /admin –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è');

  if (!adminIds) {
    console.log('\n‚ö†Ô∏è  –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ù–∞—Å—Ç—Ä–æ–π—Ç–µ ADMIN_IDS –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è');
  }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏
checkConfiguration().catch(error => {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:', error.message);
  process.exit(1);
}); 